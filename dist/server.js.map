{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./I18n.ts","webpack:///./server/server.ts","webpack:///external \"express\"","webpack:///external \"http-proxy-middleware\"","webpack:///external \"i18next-http-backend\"","webpack:///external \"next\"","webpack:///external \"next-i18next\"","webpack:///external \"next-i18next/middleware\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACI;AAC3C;AACA,gCAAgC,mDAAW;AAC3C;AACA;AACA;AACA;AACA,UAAU,2DAAO;AACjB;AACA,wDAAwD,KAAK,GAAG,IAAI;AACpE;AACA,KAAK;AACL,CAAC;AACM,OAAO,4DAA4D;AAC3D,kFAAmB,EAAC;;;;;;;;;;;;;ACfnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACN;AACoC;AAC1B;AAClC;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA,KAAK;AACL;AACA;AACA,YAAY,aAAoB;AAChC;AACA,YAAY,2CAAI,EAAE,MAAM;AACxB;AACA;AACA;AACA,mBAAmB,8CAAO;AAC1B;AACA;AACA,eAAe,wBAAwB,GAAG,mBAAO,CAAC,oDAAuB;AACzE;AACA;AACA,SAAS;AACT;AACA,UAAU,6CAAW;AACrB,eAAe,8DAAqB,CAAC,6CAAW;AAChD;AACA;AACA,+CAA+C,KAAK,GAAG;AACvD,CAAC;;;;;;;;;;;;AC/BD,oC;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,iD;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,oD","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./server/server.ts\");\n","import NextI18Next from 'next-i18next';\nimport Backend from 'i18next-http-backend';\nconst DEFAULT_LANFUAGE = 'tw';\nconst NextI18NextInstance = new NextI18Next({\n    defaultLanguage: DEFAULT_LANFUAGE,\n    defaultNS: 'translations',\n    otherLanguages: ['en'],\n    preload: [DEFAULT_LANFUAGE],\n    use: [Backend],\n    backend: {\n        loadPath: 'https://sesameee.github.io/locales/{{lng}}/{{ns}}.json',\n        parse: JSON.parse,\n    },\n});\nexport const { appWithTranslation, useTranslation, withTranslation, i18n } = NextI18NextInstance;\nexport default NextI18NextInstance;\n","import express from 'express';\nimport next from 'next';\nimport nextI18NextMiddleware from 'next-i18next/middleware';\nimport nextI18next from '../I18n';\nconst devProxy = {\n    '/api': {\n        target: 'http://13.76.80.106:8090/api/online',\n        pathRewrite: { '^/api': '/' },\n        changeOrigin: true,\n    },\n};\nconst port = process.env.PORT || 3000;\nconst env = process.env.NODE_ENV;\nconst dev = env !== 'production';\nconst app = next({ dev });\nconst handle = app.getRequestHandler();\n(async () => {\n    await app.prepare();\n    const server = express();\n    if (dev && devProxy) {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const { createProxyMiddleware } = require('http-proxy-middleware');\n        Object.keys(devProxy).forEach(function (context) {\n            server.use(context, createProxyMiddleware(devProxy['/api']));\n        });\n    }\n    await nextI18next.initPromise;\n    server.use(nextI18NextMiddleware(nextI18next));\n    server.get('*', (req, res) => handle(req, res));\n    await server.listen(port);\n    console.log(`> Ready on http://localhost:${port}`); // eslint-disable-line no-console\n})();\n","module.exports = require(\"express\");","module.exports = require(\"http-proxy-middleware\");","module.exports = require(\"i18next-http-backend\");","module.exports = require(\"next\");","module.exports = require(\"next-i18next\");","module.exports = require(\"next-i18next/middleware\");"],"sourceRoot":""}